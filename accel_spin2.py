#!/usr/bin/env python3

import sys
import time
import board
import neopixel
import math

import os
os.nice(-20)

if( len(sys.argv) > 1 ):
    arr = sys.argv[1].split(',')
    ArgColor = (int(arr[0]),int(arr[1]),int(arr[2]))
else:
    ArgColor = (100,100,100)

#slosh pixel masks
#               0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23
slosh     = [[100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100,  0],
             [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100,100],
             [100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100],
             [500,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]]

slosh_fill =[[100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,100],
             [100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,  0],
             [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
             [500,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]]


# Choose an open pin connected to the Data In of the NeoPixel strip, i.e. board.D18
# NeoPixels must be connected to D10, D12, D18 or D21 to work.
pixel_pin = board.D18

# The number of NeoPixels
num_pixels = 24

# The order of the pixel colors - RGB or GRB. Some NeoPixels have red and green reversed!
# For RGBW NeoPixels, simply change the ORDER to RGBW or GRBW.
# ORDER = neopixel.GRB

pixels = neopixel.NeoPixel(pixel_pin, num_pixels, brightness=0.1, auto_write=False, pixel_order=neopixel.GRB)

def pixels_maskfill(mask,color):
    for j in range(num_pixels):
        if ( mask[j] == 100 ):
            pixels[j] = color
        elif ( mask[j] == 0 ):
            pixels[j] = (0,0,0)
        else:
            newColor = ( math.floor((color[0]*mask[j])/100), 
                         math.floor((color[1]*mask[j])/100), 
                         math.floor((color[2]*mask[j])/100) )
            pixels[j] = newColor

bn = 0.1
seqNum = 0
tdelay = 0.03  
spin_no = 5

while spin_no != 0:
  while slosh[seqNum][0] != 500:
    pixels_maskfill(slosh[seqNum],ArgColor)
    pixels.show()
    time.sleep(tdelay)
    seqNum += 1

  spin_no -= 1
  tdelay -= 0.006  
  if( tdelay < 0 ): 
    tdelay = 0.002
  seqNum = 0

while slosh_fill[seqNum][0] != 500:
    pixels_maskfill(slosh_fill[seqNum],ArgColor)
    pixels.show()
    time.sleep(tdelay)
    seqNum += 1

pixels = 0
slosh = 0
time.sleep(1)


